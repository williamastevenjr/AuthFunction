// <auto-generated />
using System;
using AuthRepository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AuthMigrations.Migrations
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20200706001336_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AuthRepository.DataModels.AuthUser", b =>
                {
                    b.Property<byte[]>("Guid")
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(264)")
                        .HasMaxLength(264);

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(264)")
                        .HasMaxLength(264);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Guid");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("AuthUsers");
                });

            modelBuilder.Entity("AuthRepository.DataModels.JwtRefreshToken", b =>
                {
                    b.Property<byte[]>("UserGuid")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("RefreshTokenString")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512);

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime");

                    b.HasKey("UserGuid", "RefreshTokenString");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("IssuedAt");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("AuthRepository.DataModels.JwtRefreshToken", b =>
                {
                    b.HasOne("AuthRepository.DataModels.AuthUser", "AuthUser")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
